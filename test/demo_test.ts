import {assert} from 'chai';
import CoreApi from '../src/http/CoreApi';
import * as allure from "allure-js-commons";
import {Severity} from "allure-js-commons";


describe('–ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç–æ–¥–æ–≤ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö api', async () => {
    // Id –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ç–µ—Å—Ç–∞ @allure.id:‚ü®VALUE‚ü©
    it('–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–µ–Ω–∏ –∫–æ—Ç–∞ –ø–æ Id @allure.id: 001', async () => {
        /*
        * Metadata –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ { @link https://allurereport.org/docs/mocha-reference/#metadata }
         */
        // Description –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Å—Ç–∞
        await allure.description("–≠—Ç–æ—Ç —Ç–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ –∏–º—è –∫–æ—Ç–∞ —Å –∏–º–µ–Ω–µ–º, –ø–æ–ª—É—á–µ–Ω–Ω—ã–º –ø–æ id");
        // Owner –∞–≤—Ç–æ—Ä(–≤–ª–∞–¥–µ–ª–µ—Ü)
        await allure.owner("–ö–æ—Ç –ú–∞—Ç—Ä–æ—Å–∫–∏–Ω");
        // Tag —Ç—ç–≥
        await allure.tag("getNameById");
        await allure.tags("getNameById", "getCatById");
        // Severity —Å–µ—Ä—å–µ–∑–Ω–æ—Å—Ç—å —Ç–µ—Å—Ç–∞
        await allure.severity(Severity.CRITICAL);
        // Label
        await allure.label("feature", "");
        // Link —Å—Å—ã–ª–∫–∞
        await allure.link(
            "https://meowle.fintech-qa.ru/api/core/api-docs-ui/#/%D0%9F%D0%BE%D0%B8%D1%81%D0%BA/get_cats_get_by_id",
            "Swagger UI"
        );
        await allure.link("https://meowle.fintech-qa.ru", "Meowle");

        await allure.step("Load data from remote server", async () => {
            const name = '–ë–∞–º–±–∏–Ω–æ';
            // Parameter
            await allure.parameter("name", name);
            const id = 130185;
            await allure.parameter("id", id.toString());
            // Date –¥–∞—Ç–∞ –∑–∞–ø—É—Å–∫–∞
            await allure.parameter("time", new Date().toString(), {excluded: true});

            const response = await CoreApi.getCatById(id);
            console.info('—Ç–µ—Å—Ç id:001 üöÄ:', `–≤—ã–ø–æ–ª–Ω–µ–Ω –∑–∞–ø—Ä–æ—Å GET /get-by-id c –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º id = ${id}`)

            await allure.logStep(`–í—ã–ø–æ–ª–Ω–µ–Ω –∑–∞–ø—Ä–æ—Å GET /get-by-id c –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º id = ${id}`);
            await allure.logStep(`–ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –æ –∫–æ—Ç–µ –∏–∑ –æ—Ç–≤–µ—Ç–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É`);
            await allure.attachment(
                'cat',
                JSON.stringify(response.data.cat, null, 2),
                'application/json'
            );

            assert.equal(response.data.cat.name, name, '–ò–º–µ–Ω–∞ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç');
            await allure.logStep(
                `–í—ã–ø–æ–ª–Ω–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç –∏–º—ë–Ω: –æ–∂–∏–¥–∞–µ–º–æ–≥–æ –∏ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–æ–≥–æ, –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ –∏–∑ –∑–∞–ø—Ä–æ—Å–∞`);
        });

    });

    it('–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ø–∏—Å–∫–∞ –∫–æ—Ç–æ–≤ –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤ –≥—Ä—É–ø–ø–µ @alure.id: 002', async () => {
        await allure.description("–≠—Ç–æ —Ç–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç,—á—Ç–æ –≥—Ä—É–ø–ø–∞ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ—Ç–æ–≤");
        await allure.owner("–ö–æ—Ç –ú–∞—Ç—Ä–æ—Å–∫–∏–Ω");
        await allure.tag("getAllByLetter");
        await allure.severity(Severity.NORMAL);
        await allure.label("feature", "");
        await allure.link(
            'https://meowle.fintech-qa.ru/api/core/api-docs-ui/#/%D0%9F%D0%BE%D0%B8%D1%81%D0%BA/get_cats_allByLetter',
            "Swagger UI");
        await allure.link('http://meowle.fintech-qa.ru', 'Meowle');

        await allure.step("Load data from remote server", async () => {
            const limit = 5;
            const order: string = '';
            const gender: string = '';
            await allure.parameter('limit', limit.toString());
            await allure.parameter("order", order);
            await allure.parameter("gender", gender);
            await allure.parameter("time", new Date().toString(), {excluded: true});

            const response = await CoreApi.getAllByLetter(limit, order, gender);
            console.info('—Ç–µ—Å—Ç id:002 üöÄ:', '–í—ã–ø–æ–ª–Ω–µ–Ω –∑–∞–ø—Ä–æ—Å GET /—Å–ø–∏—Å–æ–∫ –∫–æ—Ç–æ–≤ –ø–æ –≥—Ä—É–ø–ø–∞–º');
            await allure.logStep(`–í—ã–ø–æ–ª–Ω–µ–Ω –∑–∞–ø—Ä–æ—Å GET / Get-–ú–µ—Ç–æ–¥ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–æ—Ç–æ–≤ —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ –≥—Ä—É–ø–ø–∞–º `);

            const data = JSON.stringify(response.data, null, 2);
            await allure.logStep('–°–ø–∏—Å–æ–∫ –∫–æ—Ç–æ–≤ –∏–∑ –∑–∞–ø—Ä–æ—Å–∞, —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –≤ –∞–ª—Ñ–∞–≤–∏—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ');
            await allure.attachment(
                'CatsList',
                data,
                'application/json'
            );

            await allure.step(
                '–í—ã–ø–æ–ª–Ω–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–æ—Ç–æ–≤ –≤ –≥—Ä—É–ø–ø–µ –∏–∑ –∑–∞–ø—Ä–æ—Å–∞ —Å –æ–∂–∏–¥–∞–µ–º—ã–º',
                () => {
                    allure.logStep(`–§–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ—Ç–æ–≤ –≤ –≥—Ä—É–ø–ø–µ –∏–∑ –æ—Ç–≤–µ—Ç–∞`);
                    allure.attachment('actual_limit', response.data.groups[0]["count_in_group"].toString(), 'text/plain');
                    allure.logStep(`–ü–æ –∑–∞–¥–∞–Ω–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º –∑–∞–ø—Ä–æ—Å–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ—Ç–æ–≤ –≤ –≥—Ä—É–ø–ø–µ –æ–∂–∏–¥–∞–ª–æ—Å—å limit=${limit}`);
                    assert.equal(response.data.groups[0]["count_in_group"], 5, '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ—Ç–æ–≤ –≤ –≥—Ä—É–ø–ø–µ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç');
                }
            );
        });
    });

    it('–ù–∞–π—Ç–∏ –∫–æ—Ç–∞ –ø–æ —á–∞—Å—Ç–∏ –Ω–∞—á–∞–ª–∞ –∏–º–µ–Ω–∏ @allure.id: 003', async () => {
        await allure.description(
            '–≠—Ç–æ—Ç —Ç–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –∏–º—ë–Ω —Å–ø–∏—Å–∫–∞ –∫–æ—Ç–æ–≤, –∫–æ–≥–¥–∞ –ø–æ–∏—Å–∫ –∫–æ—Ç–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–æ —á–∞—Å—Ç–∏ –∏–º–µ–Ω–∏');
        await allure.owner('–ö–æ—Ç –ú–∞—Ç—Ä–æ—Å–∫–∏–Ω');
        await allure.tag("getCatByPartName");
        await allure.severity(Severity.NORMAL);
        await allure.label("feature", "");
        await allure.link(
            "https://meowle.fintech-qa.ru/api/core/api-docs-ui/#/%D0%9F%D0%BE%D0%B8%D1%81%D0%BA/get_cats_search_pattern",
            "Swagger UI");
        await allure.link('http://meowle.fintech-qa.ru', 'Meowle');

        await allure.step("Load data from remote server", async () => {
            const name = '–ë–∞–º–±–∏'
            const limit = 5;
            await allure.parameter("name", name);
            await allure.parameter("limit", limit.toString());
            await allure.parameter("time", new Date().toString(), {excluded: true});

            const response = await CoreApi.searchCatByPartName(name, limit);
            console.info('—Ç–µ—Å—Ç id:003 üöÄ:', `–í—ã–ø–æ–ª–Ω–µ–Ω –∑–∞–ø—Ä–æ—Å GET / Get-–ú–µ—Ç–æ–¥ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–æ—Ç–æ–≤ —á–∞—Å—Ç–∏ –Ω–∞—á–∞–ª–∏ –∏–º–µ–Ω–∏`);
            await allure.logStep(`–í—ã–ø–æ–ª–Ω–µ–Ω –∑–∞–ø—Ä–æ—Å GET / Get-–ú–µ—Ç–æ–¥ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–æ—Ç–æ–≤ —á–∞—Å—Ç–∏ –Ω–∞—á–∞–ª–∏ –∏–º–µ–Ω–∏`);

            const data = JSON.stringify(response.data.cats, null, 2);
            await allure.logStep('–ü–æ–ª—É—á–µ–Ω —Å–ø–∏—Å–æ–∫ –∫–æ—Ç–æ–≤ –∏–∑ –∑–∞–ø—Ä–æ—Å–∞');
            await allure.attachment(
                'cats',
                data,
                'application/json'
            );
            await allure.step(`–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –∏–º—ë–Ω –∫–æ—Ç–æ–≤ –∏–∑ —Å–ø–∏—Å–∫–∞ –∏ –Ω–∞—á–∞–ª–∞ –∏–º–µ–Ω–∏ ${name}`,async () => {
                const lenCatsList: number = response.data.cats.length;
                const lenName: number = name.length;
                // –ø—Ä–æ–π—Ç–∏ –ø–æ —Å–ø–∏—Å–∫—É –∏ —Å—Ä–∞–≤–Ω–∏—Ç—å –∏–º–µ–Ω–∞
                for (let i = 0; i < lenCatsList; i++) {
                    // –∏–º—è –∫–æ—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞, –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ –∏–∑ –∑–∞–ø—Ä–æ—Å–∞
                    const catName: string = response.data.cats[i].name;
                    await allure.step(`–ö–æ—Ç –ø–æ –∏–º–µ–Ω–∏ ${catName}`, () =>{
                        // –ø—Ä–æ–≤–µ—Ä—è–µ–º –∏–º—è –∫–æ—Ç–∞(—Å–¥–µ–ª–∞–Ω —Å—Ä–µ–∑ –ø–æ –¥–ª–∏–Ω–µ –Ω–∞—á–∞–ª–æ –∏–º–µ–Ω–∏)
                        assert.equal(catName.slice(0,lenName), name);
                    })
                }
            })
        })
    });

    it(`–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ—Ç–∞(–∫–æ—Ç–æ–≤) @allure.id: 004`, async () => {
        await allure.description(`–≠—Ç–æ—Ç —Ç–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –∫–æ—Ç–∞`);
        await allure.owner('–ö–æ—Ç –ú–∞—Ç—Ä–æ—Å–∫–∏–Ω');
        await allure.tag("addCats");
        await allure.severity(Severity.BLOCKER);
        await allure.label("feature", "");
        await allure.link(
            'https://meowle.fintech-qa.ru/api/core/api-docs-ui/#/%D0%94%D0%BE%D0%B1%D0%B0%D0%B2%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5/post_cats_add',
            "Swagger UI");
        await allure.link('http://meowle.fintech-qa.ru', 'Meowle');

        // –¥–∞–Ω–Ω—ã–µ –Ω–æ–≤–æ–≥–æ(–æ–¥–∏–¥–∞–µ–º–æ–≥–æ) –∫–æ—Ç–∞
        const expectancyCat = {
            name: "–ö–æ—Ç –ú–∞—Ç—Ä–æ—Å–∫–∏–Ω",
            description: "–ö–æ—Ç –ú–∞—Ç—Ä–æ—Å–∫–∏–Ω –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è —É–º–æ–º –∏ —Å–æ–æ–±—Ä–∞–∑–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é",
            gender: "male",
        };
        await allure.parameter('name', expectancyCat.name);
        await allure.parameter('description', expectancyCat.description);
        await allure.parameter('gender', expectancyCat.gender);


        await allure.step("Load data from remote server", async () => {
            const response = await CoreApi.addCats(expectancyCat);
            await allure.parameter("time", new Date().toString(), {excluded: true});

            // –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω
            await allure.step(`–ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ—Ç "${expectancyCat.name}" –¥–æ–±–∞–≤–ª–µ–Ω, —Å—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞ "200"
            –∏ –Ω–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è "–¢–∞–∫–æ–µ –∏–º—è —É–∂–µ –µ—Å—Ç—å!"`, () => {
                const status: number = 200;
                allure.logStep(`–ê–∫—Ç—É–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å –∫–æ–¥ ${response.status}, –æ–∂–∏–¥–∞–ª—Å—è ${status}`);
                assert.ok(
                    response.status === status,
                    `–ê–∫—Ç—É–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å –∫–æ–¥ ${response.status}, –æ–∂–∏–¥–∞–ª—Å—è ${status}`
                );
                const errDes = response.data.cats[0].errorDescription;
                assert.isUndefined(errDes, "–¢–∞–∫–æ–µ –∏–º—è —É–∂–µ –µ—Å—Ç—å!");
                allure.logStep(`–ó–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª—è errorDescription : ${errDes}`);
            });
            console.info('—Ç–µ—Å—Ç id:004 üöÄ:', '–ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –Ω–∞ –∑–∞–ø—Ä–æ—Å POST / –Ω–æ–≤—ã–π –∫–æ—Ç');

            await allure.logStep(`–†–µ–∑—É–ª—å—Ç–∞—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–æ—Ç–æ–≤`);
            const data = JSON.stringify(response.data.cats, null, 2);
            await allure.attachment(
                'Cats',
                data,
                'application/json'
            );
            // –§–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø–æ–ª—è  name/description/gender –∫–æ—Ç–∞ –∏–∑ –∑–∞–ø—Ä–æ—Å–∞
            const actualFieldByCat = {
                name: response.data.cats[0].name.toLowerCase(),
                description: response.data.cats[0].description.toLowerCase(),
                gender: response.data.cats[0].gender.toLowerCase(),
            };
            // –ø–µ—Ä–µ–≤–æ–¥–∏–º –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É, —Ç–∞–∫ –∫–∞–∫ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–æ—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä –º–µ–Ω—è–µ—Ç—Å—è
            let expectancyCatToLowerCase =  {};
            for (let key in expectancyCat) {
                expectancyCatToLowerCase[key] = expectancyCat[key].toLowerCase();
            }
            await allure.logStep(`–ó–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª–µ–π –æ–∂–∏–¥–∞–µ–º–æ–≥–æ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –∫–æ—Ç–∞`);
            const actualCat = JSON.stringify(actualFieldByCat, null, 2);
            await allure.attachment(`expectancy_Cat`,
                JSON.stringify(expectancyCat, null, 2), 'application/json');
            await allure.attachment(`actual_Cat`,
                actualCat,'application/json');
            await allure.logStep(`–†–µ–∑—É–ª—å—Ç–∞—Ç —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –∫–æ—Ç–∞ –∏ –æ–∂–∏–¥–∞–µ–º–æ–≥–æ,
             –ø–µ—Ä–µ–≤–æ–¥–∏–º –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É, —Ç–∞–∫ –∫–∞–∫ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–æ—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä –º–µ–Ω—è–µ—Ç—Å—è `);
            assert.deepEqual(actualFieldByCat, expectancyCatToLowerCase);
        });
    });

    it(`–£–¥–∞–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫–æ—Ç–∞ –ø–æ id @allure.id: 005`, async () => {
        const id = 130387;
        const response = await CoreApi.removeCat(id);
        const data = JSON.stringify(response.data, null, 2);
        await allure.attachment('–£–¥–∞–ª–µ–Ω–Ω—ã–π –∫–æ—Ç', data, 'application/json');

    });
})